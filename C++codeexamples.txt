//virtual destructor:

/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;


class A{
    
    int a;
    public:
        void f1()
        {
            cout<<"i am f1() :A\n";
        }
        
        virtual void f2()
        {
            cout<<"i am f2(): A\n";
        }
        virtual ~A(){};
        
};

class B : public A{
    
    int b;
    public:
        void f2()
        {
            cout<<"i am f2(): B\n";
        }
        
        ~B(){};
};

int main()
{
    cout<<"main method\n";
    A *ptr = new B();
    ptr->f1(); //correct EB
    ptr->f2(); //LB
    delete ptr;
    

    return 0;
}

//-------------------------------------------------------------------------------------------------------------


//**Operator Overloading

#include <iostream>

using namespace std;

class Complex
{
	private:
		int a,b;
		public:
			void setData(int x,int y)
			{
				a=x;
				b=y;
			}
			void showData()
			{
				cout<<"\na:"<<a<<" b:"<<b;
				
			}
			Complex operator +(Complex c)
			{
				Complex temp;
				temp.a = a+c.a;
				temp.b = b+c.b;
				return temp;
			}
			
			Complex operator -()
			{
				Complex temp;
				temp.a = -a;
				temp.b = -b;
				return temp;
			}
};//class

int main()
{
//	clrscr();
	Complex c1,c2,c3,c4;
	c1.setData(3,4);
	c2.setData(2,5);
	c3=c1+c2; // operator oveloading : binary operator
	c3.showData();
	
	c4=-c1; //unary operator
	c4.showData();
	
	return 0;
}

//--------------------------------------------------------------------------------------------
